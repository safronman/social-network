{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/PersonalInfo/PersonalInfo.module.css","img/avatar.png","components/Profile/Posts/Post/Post.module.css","components/Messages/DialogsPreview/DialogsPreview.module.css","components/Profile/Posts/AddPost/AddPost.module.css","components/Messages/Messages.module.css","components/Messages/DialogsMessages/DialogsMessages.module.css","components/Messages/DialogsMessages/AddMessage/AddMessage.module.css","img/avatar-1.svg","components/Header/Header.module.css","components/Users/User/User.module.css","img/logo.svg","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Profile/Cover/Cover.module.css","img/cover.jpg","components/Profile/Posts/Posts.module.css","img/avatar-2.svg","img/avatar-3.svg","components/Users/Users.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Profile/Cover/Cover.jsx","components/Profile/PersonalInfo/PersonalInfo.jsx","redux/reducers/profilePageReducer.js","components/Profile/PersonalInfo/PersonalInfoContainer.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/AddPost/AddPost.jsx","components/Profile/Posts/AddPost/AddPostContainer.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Messages/DialogsPreview/DialogsPreview.jsx","components/Messages/DialogsMessages/DialogsMessages.jsx","components/Messages/DialogsMessages/AddMessage/AddMessage.jsx","redux/reducers/messagesPageReducer.js","components/Messages/DialogsMessages/AddMessage/AddMessageContainer.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","components/Users/User/User.js","redux/requestStatuses.js","components/Users/Users.js","redux/reducers/usersPageReducer.js","components/Users/UsersContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","nav","list","link","activeLink","info","desc","item","btn","fullList","__webpack_require__","p","postItem","postAvatar","dialogsLink","dialogsLinkActive","dialogsPhoto","newPost","heading","newPostTextarea","newPostBtn","wrapper","dialogsPreviewWrapper","dialogsPreview","dialogsMessages","img","message","textarea","header","logo","avatar","name","headerColor","coverImg","postList","userList","Header","props","react_default","a","createElement","className","styles","src","alt","Navbar","NavLink","exact","to","concat","activeClassName","News","Music","Settings","Cover","cover","PersonalInfo","_ref","enableFullInfoBtn","profilePage","toggleFullInfo","fullInfo","btnName","onClick","ADD_POST","initialState","postsData","id","likes","currentMessage","profilePageReducer","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","PersonalInfoContainer","connect","dispatch","Post","postContent","postDesc","postActions","AddPost","addCurrentMessage","addPost","onChange","e","currentTarget","value","placeholder","AddPostContainer","addCurrentMessageActionCreator","addPostActionCreator","Posts","posts","map","Posts_Post_Post","key","AddPost_AddPostContainer","PostsContainer","Profile","Profile_Cover_Cover","PersonalInfo_PersonalInfoContainer","Posts_PostsContainer","ProfileContainer","DialogsPreview","chatsId","dialogsItem","width","DialogsMessages","content","messageId","author","AddMessage","messagesPage","addMessage","ADD_MESSAGE","chats","avatar1","messages","authorId","avatar2","avatar3","messagesPageReducer","text","newMessage","newState","push","AddMessageContainer","addMessageActionCreator","Messages","Messages_DialogsPreview_DialogsPreview","Messages_DialogsMessages_DialogsMessages","AddMessage_AddMessageContainer","MessagesContainer","User","small","substring","statuses","instance","axios","baseURL","withCredentials","Users","_ref$usersPage","usersPage","status","users","setStatus","setUsers","get","then","response","data","items","usersList","Users_User_User","photos","SET_STATUS","SET_USERS","usersPageReducer","UsersContainer","setStatusActionCreator","setUsersActionCreator","App","components_Header_Header","components_Navbar_Navbar","Users_UsersContainer","Route","path","render","Profile_ProfileContainer","Messages_MessagesContainer","component","Boolean","window","location","hostname","match","combinedReducers","combineReducers","store","createStore","renderPage","ReactDOM","es","BrowserRouter","src_App_0","document","getElementById","getState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23c42965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1qsfk\",\"list\":\"Navbar_list__3eMFr\",\"link\":\"Navbar_link__2lnGH\",\"activeLink\":\"Navbar_activeLink__3oaG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"PersonalInfo_info__3wQeg\",\"desc\":\"PersonalInfo_desc__2aHyQ\",\"list\":\"PersonalInfo_list__3Yj0Z\",\"item\":\"PersonalInfo_item__3tpvp\",\"btn\":\"PersonalInfo_btn__3wOvV\",\"fullList\":\"PersonalInfo_fullList__34R1E\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.c5812e4f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__2evol\",\"postAvatar\":\"Post_postAvatar__kmzMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsLink\":\"DialogsPreview_dialogsLink__nvcgO\",\"dialogsLinkActive\":\"DialogsPreview_dialogsLinkActive__gL6Wg\",\"dialogsPhoto\":\"DialogsPreview_dialogsPhoto__wiKQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"AddPost_newPost__10-i4\",\"heading\":\"AddPost_heading__2p5cl\",\"newPostTextarea\":\"AddPost_newPostTextarea__d0sUc\",\"newPostBtn\":\"AddPost_newPostBtn__2GhHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__yUr7n\",\"dialogsPreviewWrapper\":\"Messages_dialogsPreviewWrapper__1uSc4\",\"dialogsPreview\":\"Messages_dialogsPreview__VEDr3\",\"dialogsMessages\":\"Messages_dialogsMessages__2ESfT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DialogsMessages_wrapper__3rBia\",\"img\":\"DialogsMessages_img___fiuM\",\"message\":\"DialogsMessages_message__2IlNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddMessage_wrapper__2nS3U\",\"textarea\":\"AddMessage_textarea__35Fnq\",\"btn\":\"AddMessage_btn__3JIuD\"};","module.exports = __webpack_public_path__ + \"static/media/avatar-1.f27e091c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__hmrZL\",\"logo\":\"Header_logo__N8XJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__EmJQo\",\"name\":\"User_name__3tF_8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.e06e0dcf.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerColor\":\"News_headerColor__3Xz9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerColor\":\"Music_headerColor__2j6SQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerColor\":\"Settings_headerColor__2JosO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverImg\":\"Cover_coverImg__Zr59g\"};","module.exports = __webpack_public_path__ + \"static/media/cover.ba83dc05.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"Posts_postList__iLW5m\"};","module.exports = __webpack_public_path__ + \"static/media/avatar-2.86719400.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar-3.22f9e6a1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userList\":\"Users_userList__4QA-9\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport logo from '../../img/logo.svg';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <img className={styles.logo}\r\n                 src={logo} alt=\"logotype\"/>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport NavLink from \"react-router-dom/es/NavLink\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <ul className={styles.list}>\r\n                <li className={styles.item}>\r\n                    <NavLink exact to='/' className={`${styles.link}`} activeClassName={styles.activeLink}>Profile</NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <NavLink to='/messages' className={styles.link} activeClassName={styles.activeLink}>Messages</NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <NavLink to='/news' className={styles.link} activeClassName={styles.activeLink}>News</NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <NavLink to='/music' className={styles.link} activeClassName={styles.activeLink}>Music</NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <NavLink to='/settings' className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <h2 className={styles.headerColor}>News</h2>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport styles from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <h2 className={styles.headerColor}>Music</h2>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <h2 className={styles.headerColor}>Settings</h2>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styles from './Cover.module.css';\r\nimport cover from'../../../img/cover.jpg'\r\n\r\nconst Cover = () => {\r\n    return (\r\n        <img className={styles.coverImg}\r\n             src={cover}\r\n             alt=\"cover\"/>\r\n    );\r\n};\r\n\r\nexport default Cover;","import React from 'react';\r\nimport styles from './PersonalInfo.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PersonalInfo = ({profilePage: {enableFullInfoBtn}, toggleFullInfo}) => {\r\n    // debugger\r\n    let onFullInfoButtonClick = () => {\r\n        // debugger\r\n        toggleFullInfo();\r\n    };\r\n\r\n    let fullInfo = null;\r\n    let btnName = 'Show full information';\r\n\r\n    if (enableFullInfoBtn) {\r\n        fullInfo = (\r\n            <ul className={styles.fullList}>\r\n                <li className={styles.item}>Languages: russian, english</li>\r\n                <li className={styles.item}>Education: The Belarusian State University of Culture and Arts, 2016</li>\r\n                <li className={styles.item}>Relationship status: married</li>\r\n            </ul>\r\n        );\r\n        btnName = 'Hide full information';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.info}>\r\n            <ul className={styles.list}>\r\n                <li className={styles.item}>Name: Margarita Samoylova</li>\r\n                <li className={styles.item}>Birthday: August 17, 1992</li>\r\n                <li className={styles.item}>Current city: Minsk</li>\r\n            </ul>\r\n            <button className={styles.btn}\r\n                    onClick={onFullInfoButtonClick}>{btnName}</button>\r\n            {fullInfo}\r\n        </div>\r\n    );\r\n};\r\n\r\nPersonalInfo.propTypes = {\r\n    profilePage: PropTypes.shape({\r\n        enableFullInfoBtn: PropTypes.bool\r\n    }),\r\n    toggleFullInfo: PropTypes.func\r\n};\r\n\r\nexport default PersonalInfo;","// Actions\r\nconst ADD_CURRENT_MESSAGE = 'social-network/profile-page/ADD_CURRENT_MESSAGE';\r\nconst ADD_POST = 'social-network/profile-page/ADD_POST';\r\nconst TOGGLE_FULL_INFO = 'social-network/profile-page/TOGGLE_FULL_INFO';\r\n\r\n\r\n// Initial state\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Разнообразный и богатый опыт дальнейшее развитие различных форм деятельности позволяет оценить значение новых предложений. Товарищи! сложившаяся структура организации требуют определения и уточнения существенных финансовых и административных условий. Товарищи! новая модель организационной деятельности в значительной степени обуславливает создание форм развития.\",\r\n            likes: 125\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Задача организации, в особенности же постоянное информационно-пропагандистское обеспечение нашей деятельности играет важную роль в формировании системы обучения кадров, соответствует насущным потребностям. Повседневная практика показывает, что дальнейшее развитие различных форм деятельности играет важную роль в формировании новых предложений.\",\r\n            likes: 232\r\n        }\r\n    ],\r\n    enableFullInfoBtn: false,\r\n    currentMessage: ''\r\n};\r\n\r\n\r\n// Reducer\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CURRENT_MESSAGE:\r\n            return {\r\n                ...state,\r\n                currentMessage: action.message\r\n            };\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, {\r\n                    id: 4,\r\n                    message: action.message,\r\n                    likes: 0\r\n                }],\r\n                currentMessage: ''\r\n            };\r\n\r\n        case TOGGLE_FULL_INFO:\r\n            return {\r\n                ...state,\r\n                enableFullInfoBtn: !state.enableFullInfoBtn\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const addCurrentMessageActionCreator = (message) => {\r\n    return {\r\n        type: ADD_CURRENT_MESSAGE,\r\n        message: message\r\n    };\r\n};\r\n\r\nexport const addPostActionCreator = (message) => {\r\n    return {\r\n        type: ADD_POST,\r\n        message: message\r\n    };\r\n};\r\n\r\nexport const toggleFullInfoActionCreator = () => {\r\n    return {\r\n        type: TOGGLE_FULL_INFO\r\n    };\r\n};\r\n\r\nexport default profilePageReducer;","import PersonalInfo from \"./PersonalInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleFullInfoActionCreator} from \"../../../redux/reducers/profilePageReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleFullInfo: () => {\r\n            dispatch(toggleFullInfoActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nlet PersonalInfoContainer = connect(mapStateToProps, mapDispatchToProps)(PersonalInfo);\r\n\r\nexport default PersonalInfoContainer;","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport avatar from '../../../../img/avatar.png'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Post = ({message, likes}) => {\r\n    // debugger\r\n    return (\r\n        <div className={styles.postItem}>\r\n            <div className={styles.postContent}>\r\n                <img className={styles.postAvatar}\r\n                     src={avatar}\r\n                     alt=\"avatar\"/>\r\n                <p className={styles.postDesc}>{message}</p>\r\n            </div>\r\n            <div className={styles.postActions}>\r\n                <div>like: {likes}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    message: PropTypes.string,\r\n    likes: PropTypes.number\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './AddPost.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddPost = ({profilePage:{currentMessage}, addCurrentMessage, addPost}) => {\r\n    // debugger\r\n\r\n    let onTextareaChange = (e) => {\r\n        addCurrentMessage(e.currentTarget.value);\r\n    };\r\n\r\n    let onAddPostClick = () => {\r\n        addPost(currentMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.newPost}>\r\n            <h2 className={styles.heading}>My posts</h2>\r\n            <textarea className={styles.newPostTextarea}\r\n                      onChange={onTextareaChange}\r\n                      value={currentMessage}\r\n                      placeholder=\"Add text\"/>\r\n            <button className={styles.newPostBtn}\r\n                    onClick={onAddPostClick}>Add post\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nAddPost.propTypes = {\r\n    currentMessage: PropTypes.string,\r\n    addCurrentMessage: PropTypes.func,\r\n    addPost: PropTypes.func\r\n};\r\n\r\nexport default AddPost;","import AddPost from \"./AddPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCurrentMessageActionCreator, addPostActionCreator} from \"../../../../redux/reducers/profilePageReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCurrentMessage: (message) => {\r\n            dispatch(addCurrentMessageActionCreator(message))\r\n        },\r\n        addPost: (message) => {\r\n            dispatch(addPostActionCreator(message))\r\n        }\r\n    }\r\n};\r\n\r\nlet AddPostContainer = connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\n\r\nexport default AddPostContainer;","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddPostContainer from \"./AddPost/AddPostContainer\";\r\n\r\nconst Posts = ({profilePage: {postsData}}) => {\r\n    // debugger\r\n    let posts = postsData.map(item => {\r\n        return <Post key={item.id} message={item.message} likes={item.likes}/>\r\n    });\r\n\r\n    return (\r\n        <div className={styles.postList}>\r\n            <AddPostContainer/>\r\n            {posts}\r\n        </div>\r\n    );\r\n};\r\n\r\nPosts.propTypes = {\r\n    profilePage: PropTypes.shape({\r\n        postsData: PropTypes.array\r\n    })\r\n};\r\n\r\nexport default Posts;","import {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n};\r\n\r\nlet PostsContainer = connect(mapStateToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport Cover from \"./Cover/Cover\";\r\nimport PersonalInfoContainer from \"./PersonalInfo/PersonalInfoContainer\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\n\r\nconst Profile = () => {\r\n    // debugger\r\n    return (\r\n        <main>\r\n            <Cover/>\r\n            <PersonalInfoContainer />\r\n            <PostsContainer />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        profilePage:state.profilePage\r\n    }\r\n};\r\n\r\nlet ProfileContainer = connect(mapStateToProps)(Profile);\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport styles from './DialogsPreview.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DialogsPreview = ({chatsId, name, avatar}) => {\r\n    // debugger\r\n    const mainPath = \"/messages/\";\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.dialogsItem}>\r\n                <NavLink to={`${mainPath}${chatsId}`}\r\n                         className={`${styles.dialogsLink}`}\r\n                         activeClassName={styles.dialogsLinkActive}>\r\n                    <img className={styles.dialogsPhoto}\r\n                         src={avatar}\r\n                         alt=\"Avatar photo\"\r\n                         width=\"50px\"/>\r\n                    <p>{name}</p>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDialogsPreview.propTypes = {\r\n    chatsId: PropTypes.number,\r\n    name: PropTypes.string,\r\n    avatar: PropTypes.string\r\n};\r\n\r\nexport default DialogsPreview;","import React from \"react\";\r\nimport styles from \"./DialogsMessages.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst DialogsMessages = ({content, messageId, author:{avatar}}) => {\r\n    // debugger\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <img className={styles.img} src={avatar} alt=\"avatar\"/>\r\n            <p className={styles.message}>{content}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nDialogsMessages.propTypes = {\r\n    messageId: PropTypes.number,\r\n    content: PropTypes.string,\r\n    author: PropTypes.shape({\r\n        avatar: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default DialogsMessages;","import React from \"react\";\r\nimport styles from \"./AddMessage.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddMessage = ({messagesPage: {currentMessage}, addCurrentMessage, addMessage }) => {\r\n    // debugger\r\n    let onTextareaValueChange = (e) => {\r\n        addCurrentMessage(e.currentTarget.value);\r\n    };\r\n\r\n    let onSendButtonClick = () => {\r\n        addMessage(currentMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <textarea className={styles.textarea}\r\n                      onChange={onTextareaValueChange}\r\n                      placeholder=\"Write a message\"\r\n                      value={currentMessage}/>\r\n            <button className={styles.btn}\r\n                    onClick={onSendButtonClick}>Send\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nAddMessage.propTypes = {\r\n    addCurrentMessage: PropTypes.func,\r\n    addMessage: PropTypes.func,\r\n    currentMessage: PropTypes.string\r\n};\r\n\r\nexport default AddMessage;","import avatar from \"../../img/avatar.png\";\r\nimport avatar1 from \"../../img/avatar-1.svg\";\r\nimport avatar2 from \"../../img/avatar-2.svg\";\r\nimport avatar3 from \"../../img/avatar-3.svg\";\r\n\r\n// Actions\r\nconst ADD_CURRENT_MESSAGE = 'social-network/messages-page/ADD_CURRENT_MESSAGE';\r\nconst ADD_MESSAGE = 'social-network/messages-page/ADD_MESSAGE';\r\n\r\n\r\n// Initial state\r\nlet initialState = {\r\n    currentMessage: '',\r\n    chats: [\r\n        {\r\n            chatsId: 1,\r\n            name: 'Mikhail',\r\n            avatar: avatar1,\r\n            messages: [\r\n                {\r\n                    messageId: 1,\r\n                    author: {\r\n                        authorId: 1,\r\n                        name: 'Margarita',\r\n                        avatar: avatar,\r\n                    },\r\n                    content: 'Good morning'\r\n                },\r\n                {\r\n                    messageId: 2,\r\n                    author: {\r\n                        authorId: 2,\r\n                        name: 'Mikhail',\r\n                        avatar: avatar1,\r\n                    },\r\n                    content: 'Hello'\r\n                },\r\n                {\r\n                    messageId: 3,\r\n                    author: {\r\n                        authorId: 1,\r\n                        name: 'Margarita',\r\n                        avatar: avatar,\r\n                    },\r\n                    content: 'How are you?'\r\n                },\r\n                {\r\n                    messageId: 4,\r\n                    author: {\r\n                        authorId: 2,\r\n                        name: 'Mikhail',\r\n                        avatar: avatar1,\r\n                    },\r\n                    content: 'I am fine, thanks'\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            chatsId: 2,\r\n            name: 'Anastasia',\r\n            avatar: avatar2,\r\n            messages: []\r\n        },\r\n        {\r\n            chatsId: 3,\r\n            name: 'Dmitry',\r\n            avatar: avatar3,\r\n            messages: []\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n// Reducer\r\nconst messagesPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_CURRENT_MESSAGE:\r\n            return {\r\n                ...state,\r\n                currentMessage: action.text\r\n            };\r\n\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                messageId: 5,\r\n                author: {\r\n                    authorId: 1,\r\n                    name: 'Margarita',\r\n                    avatar: avatar,\r\n                },\r\n                content: action.text\r\n            };\r\n\r\n            let newState = {...state};\r\n            newState.chats[0].messages.push(newMessage);\r\n            newState.currentMessage = '';\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const addCurrentMessageActionCreator = (message) => {\r\n    return {\r\n        type: ADD_CURRENT_MESSAGE,\r\n        text: message\r\n    };\r\n};\r\n\r\nexport const addMessageActionCreator = (message) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        text: message\r\n    };\r\n};\r\n\r\nexport default messagesPageReducer;","import {connect} from \"react-redux\";\r\nimport AddMessage from \"./AddMessage\";\r\nimport {addCurrentMessageActionCreator, addMessageActionCreator} from \"../../../../redux/reducers/messagesPageReducer\";\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        addCurrentMessage: (message)=> {\r\n            dispatch(addCurrentMessageActionCreator(message))\r\n        },\r\n        addMessage: (message)=> {\r\n            dispatch(addMessageActionCreator(message))\r\n        }\r\n    }\r\n};\r\n\r\nlet AddMessageContainer = connect(mapStateToProps, mapDispatchToProps)(AddMessage);\r\n\r\nexport default AddMessageContainer;","import React from 'react';\r\nimport styles from './Messages.module.css';\r\nimport DialogsPreview from \"./DialogsPreview/DialogsPreview\";\r\nimport DialogsMessages from \"./DialogsMessages/DialogsMessages\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddMessageContainer from \"./DialogsMessages/AddMessage/AddMessageContainer\";\r\n\r\nconst Messages = ({messagesPage}) => {\r\n    // debugger\r\n    let dialogsPreview = messagesPage.chats.map(item => {\r\n        return <DialogsPreview key={item.chatsId}\r\n                               chatsId={item.chatsId}\r\n                               name={item.name}\r\n                               avatar={item.avatar}/>\r\n    });\r\n\r\n    let dialogsMessages = messagesPage.chats[0].messages.map(item => {\r\n        return <DialogsMessages key={item.messageId}\r\n                                messageId={item.messageId}\r\n                                author={item.author}\r\n                                content={item.content}/>\r\n    });\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.dialogsPreviewWrapper}>\r\n                <ul className={styles.dialogsPreview}>{dialogsPreview}</ul>\r\n            </div>\r\n            <div>\r\n                <div className={styles.dialogsMessages}>{dialogsMessages}</div>\r\n                <AddMessageContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMessages.propTypes = {\r\n    messagesPage: PropTypes.shape({\r\n        chats: PropTypes.array\r\n    })\r\n};\r\n\r\nexport default Messages;","import {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\n\r\nlet mapStateToProps = (state)=> {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n};\r\n\r\n\r\nlet MessagesContainer = connect(mapStateToProps)(Messages);\r\n\r\nexport default MessagesContainer;","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst User = ({avatar, name}) => {\r\n    // debugger;\r\n    return (\r\n        <div>\r\n            <img className={styles.avatar}\r\n                 src={avatar.small === null ? 'https://placecage.com/50/50' : avatar.small}\r\n                 alt=\"avatar\"/>\r\n            <p className={styles.name}>{ name.length > 10 ? `${name.substring(0, 6)} ...` : name}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nUser.propTypes = {\r\n    id: PropTypes.number,\r\n    avatar: PropTypes.object,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default User;","export const statuses = {\r\n    STATUS_NOT_INITIALIZED: 'STATUS_NOT_INITIALIZED',\r\n    STATUS_IN_PROGRESS: 'STATUS_IN_PROGRESS',\r\n    STATUS_SUCCESS: 'STATUS_SUCCESS',\r\n    STATUS_ERROR: 'STATUS_ERROR'\r\n};\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport User from \"./User/User\";\r\nimport {statuses} from \"../../redux/requestStatuses\";\r\nimport * as axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true\r\n});\r\n\r\nconst Users = ({usersPage: {status, users}, setStatus, setUsers}) => {\r\n    // debugger\r\n\r\n    if (status === statuses.STATUS_NOT_INITIALIZED) {\r\n        setStatus(statuses.STATUS_IN_PROGRESS);\r\n\r\n        instance.get('users?count=12')\r\n            .then((response) => {\r\n                setStatus(statuses.STATUS_SUCCESS);\r\n                setUsers(response.data.items);\r\n            })\r\n    }\r\n\r\n    if (users.length === 0) {\r\n        return <div>users not found</div>\r\n    }\r\n\r\n    let usersList = users.map(item => {\r\n        return <User key={item.id} name={item.name} avatar={item.photos}/>\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h3>Users</h3>\r\n            <div className={styles.userList}>{usersList}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUsers.propTypes = {\r\n    usersPage: PropTypes.shape({\r\n        status: PropTypes.string,\r\n        users: PropTypes.array\r\n    }),\r\n    setStatus: PropTypes.func,\r\n    setUsers: PropTypes.func\r\n};\r\n\r\nexport default Users;\r\n","import {statuses} from \"../requestStatuses\";\r\n\r\n// Actions\r\nconst SET_STATUS = 'social-network/users-page/SET_STATUS';\r\nconst SET_USERS = 'social-network/users-page/SET_USERS';\r\n\r\n\r\n// Initial state\r\nlet initialState = {\r\n    status: statuses.STATUS_NOT_INITIALIZED,\r\n    users: []\r\n};\r\n\r\n\r\n// Reducer\r\nconst usersPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const setStatusActionCreator = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    };\r\n};\r\n\r\nexport const setUsersActionCreator = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    };\r\n};\r\nexport default usersPageReducer;","import Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {setStatusActionCreator, setUsersActionCreator} from \"../../redux/reducers/usersPageReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersPage: state.usersPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setStatus: (status) => {\r\n            dispatch(setStatusActionCreator(status))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersActionCreator(users))\r\n        }\r\n    }\r\n};\r\n\r\nlet UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\nexport default UsersContainer;","import React from 'react';\r\nimport {Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst App = () => {\r\n    // debugger\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            <div className=\"sidebar\">\r\n                <Navbar/>\r\n                <UsersContainer />\r\n            </div>\r\n            <div className=\"app-wrapper__content\">\r\n                <Route exact path='/'\r\n                       render={() => <ProfileContainer/>}/>\r\n                <Route path='/messages'\r\n                       render={() => <MessagesContainer/>}/>\r\n                <Route path='/news' component={News}/>\r\n                <Route path='/music' component={Music}/>\r\n                <Route path='/settings' component={Settings}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nApp.propTypes = {\r\n    store: PropTypes.shape({\r\n        state: PropTypes.shape({\r\n            profilePage: PropTypes.object,\r\n            dialogsPage: PropTypes.object,\r\n            sidebar: PropTypes.object\r\n        })\r\n    })\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./redux/reducers/profilePageReducer\";\r\nimport messagesPageReducer from \"./redux/reducers/messagesPageReducer\";\r\nimport {Provider} from \"react-redux\";\r\nimport usersPageReducer from \"./redux/reducers/usersPageReducer\";\r\n\r\nlet combinedReducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    messagesPage: messagesPageReducer,\r\n    usersPage: usersPageReducer\r\n});\r\n\r\nlet store = createStore(combinedReducers);\r\n\r\nlet renderPage = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </Provider>,\r\n        document.getElementById('root'));\r\n};\r\n\r\nrenderPage(store.getState());\r\n\r\nexport default renderPage;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}